name: lunasea-media-stack
services:
  # To use/enable VPN, Run this compose file with --profile=vpn. Its highly recommended to use VPN.
  vpn:
    ## Read https://github.com/qdm12/gluetun-wiki/tree/main/setup/providers for details on configuring VPN for your service provider.
    profiles: ["vpn"]
    container_name: vpn
    image: qmcgaw/gluetun:v3.39.0
    cap_add:
      - NET_ADMIN
    environment:
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER:-nordvpn} # Valid values: nordvpn, expressvpn, protonvpn, surfshark or custom
      - OPENVPN_USER=${OPENVPN_USER:-""}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD:-""}

      ## For list of server countries, visit https://raw.githubusercontent.com/qdm12/gluetun/master/internal/storage/servers.json
      ## When VPN_SERVICE_PROVIDER is custom. Comment the below line
      - SERVER_COUNTRIES=${SERVER_COUNTRIES:-Switzerland}
    
      # - FREE_ONLY=on  # Valid with protonvpn only. Value willbe set "on" if using free subscription provided by protonvpn

      ## Enable below if VPN_SERVICE_PROVIDER=custom
      # - VPN_TYPE=openvpn # or wireguard. 

      ## If VPN_TYPE is openvpn
      # - OPENVPN_CUSTOM_CONFIG=/gluetun/custom.conf

      ## If VPN_TYPE is wireguard. Replace below env variables as required.
      # - VPN_ENDPOINT_IP=1.2.3.4                                               # Replace with your wg endpoint ip or domain
      # - VPN_ENDPOINT_PORT=51820                                               # Replace with wg server port
      # - WIREGUARD_PUBLIC_KEY=wAUaJMhAq3NFutLHIdF8AN0B5WG8RndfQKLPTEDHal0=     # Replace with your wg public key
      # - WIREGUARD_PRIVATE_KEY=wOEI9rqqbDwnN8/Bpp22sVz48T71vJ4fYmFWujulwUU=    # Replace with your wg client private key
      # - WIREGUARD_PRESHARED_KEY=xOEI9rqqbDwnN8/Bpp22sVz48T71vJ4fYmFWujulwUU=  # Replaced with your wg pre-shared key
      # - WIREGUARD_ADDRESSES="10.64.222.21/32"                                 # Replace with wg address

    ## Enable volume if VPN_SERVICE_PROVIDER=custom and VPN_TYPE=openvpn is used
    # volumes:
      # - /yourpath/yourconfig.conf:/gluetun/config.conf:ro

    networks:
      - mynetwork

    # # Uncomment below when using VPN in an LXC container
    # # Make sure to mount /dev/net/tun and /dev/net from underlaying host into your LXC.
    # devices:
    #   - /dev/net/tun:/dev/net/tun
      
    # Uncomment/enable below ports if VPN is used/enabled
    # ports:
    #   # qbittorrent ports
    #   - 5080:5080
    #   - 6881:6881
    #   - 6881:6881/udp
    #   # prowlarr ports
    #   - 9696:9696
    restart: "unless-stopped"
  sabnzbd:
    profiles: ["vpn", "no-vpn"]   
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    networks:
      - mynetwork
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIME_ZONE}
    volumes:
      - sabnzbd-config:/config
      - usenet-downloads:/downloads
      - temp-downloads:/temp-downloads
    ports:
      - 1337:8080
    restart: unless-stopped
  # jdownloader:
  #   image: jlesage/jdownloader-2
  #   ports:
  #     - "5800:5800"
  #   volumes:
  #     - "jdownloader-config:/config:rw"
  #     - usenet-downloads:/output  
  maintainerr:
    profiles: ["vpn", "no-vpn"]
    container_name: maintainerr
    networks:
      - mynetwork 
    environment:
        - TZ=${TIME_ZONE}
    volumes:
      - maintainerr-config:/opt/data
    user: 1000:1000
    ports:
        - 6246:6246
    restart: unless-stopped
    image: ghcr.io/jorenn92/maintainerr:latest
  radarr:
    profiles: ["vpn", "no-vpn"]
    container_name: radarr
    image: lscr.io/linuxserver/radarr:5.10.4
    networks:
      - mynetwork   # Comment this line if VPN is enabled
    ## Uncomment below lines if VPN is enabled
    #   mynetwork:
    #     ipv4_address: ${RADARR_STATIC_CONTAINER_IP} # It should be available IPv4 address in range of docker network `mynetwork` e.g. 172.20.0.2
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIME_ZONE}
    ports:
      - 7878:7878
    volumes:
      - radarr-config:/config
      - usenet-downloads:/downloads
    restart: "unless-stopped"
  # headphones:
  #   profiles: ["vpn", "no-vpn"]
  #   image: lscr.io/linuxserver/headphones:latest
  #   container_name: headphones
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=${TIME_ZONE}
  #   volumes:
  #     - headphones-config:/config
  #     - usenet-downloads:/downloads
  #     - music-library:/music 
  #   ports:
  #     - 8181:8181
  #   networks:
  #     - mynetwork 
  #   restart: unless-stopped
  lidarr:
    profiles: ["vpn", "no-vpn"]
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIME_ZONE}
    volumes:
      - lidarr-config:/config
      - usenet-downloads:/downloads
      - music-library:/music 
    ports:
      - 8686:8686
    networks:
      - mynetwork 
    restart: unless-stopped
  beets:
    image: lscr.io/linuxserver/beets:latest
    container_name: beets
    profiles: ["vpn", "no-vpn"]
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIME_ZONE}
    networks:
      - mynetwork
    volumes:
      - beets-config:/config
      - music-library:/music
      - usenet-downloads:/downloads
    ports:
      - 8337:8337
    restart: unless-stopped
  sonarr:
    profiles: ["vpn", "no-vpn"]
    image: linuxserver/sonarr:4.0.9
    container_name: sonarr
    networks:
      - mynetwork   # Comment this line if VPN is enabled
    ## Uncomment below lines if VPN is enabled
    #   mynetwork:
    #     ipv4_address: ${SONARR_STATIC_CONTAINER_IP} # It should be available IPv4 address in range of docker network `mynetwork` e.g. 172.20.0.2
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIME_ZONE}
    volumes:
      - sonarr-config:/config
      - usenet-downloads:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped
    
  #newznab / usenet downloads
  nzbhydra2:
    image: lscr.io/linuxserver/nzbhydra2:latest
    profiles: ["vpn", "no-vpn"]
    container_name: nzbhydra2
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIME_ZONE}
    volumes:
      - nzbhydra2-config:/config
      - usenet-downloads:/downloads
    ports:
      - 5076:5076
    restart: unless-stopped

  prowlarr:
    profiles: ["vpn", "no-vpn"]
    container_name: prowlarr
    image: linuxserver/prowlarr:1.23.1

    # Uncomment below if vpn is enabled
    # depends_on:               # Uncomment this line if vpn is enabled
      # vpn:                   # Uncomment this line if vpn is enabled
      #   condition: service_healthy # Uncomment this line if vpn is enabled
    # network_mode: service:vpn # Uncomment this line if vpn is enabled

    networks:               # Comment this line if vpn is enabled
      - mynetwork           # Comment this line if vpn is enabled
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIME_ZONE}
    volumes:
      - prowlarr-config:/config

    # Comment below ports if VPN is enabled.
    ports:
      - 9696:9696
    restart: unless-stopped

  jellyseerr:
    profiles: ["vpn", "no-vpn"]
    image: fallenbagel/jellyseerr:1.9.2
    container_name: jellyseerr
    networks:
      - mynetwork
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIME_ZONE}
    volumes:
      - jellyseerr-config:/app/config
      - music-library:/music
      - movies-library:/movies
      - tv-series-library:/tv-series
    ports:
      - 5055:5055
    restart: unless-stopped

  lazylibrarian:
    image: lscr.io/linuxserver/lazylibrarian:latest
    profiles: ["vpn", "no-vpn"]
    networks:               # Comment this line if vpn is enabled
      - mynetwork           
    container_name: lazylibrarian
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIME_ZONE}
      - DOCKER_MODS=linuxserver/mods:universal-calibre|linuxserver/mods:lazylibrarian-ffmpeg #optional
    volumes:
      - lazylibrarian-config:/config
      # - torrent-downloads:/downloads/torrents
      - usenet-downloads:/downloadsd
      - music-library:/music
      - movies-library:/movies
      - tv-series-library:/tv-series
    ports:
      - 5299:5299
    restart: unless-stopped

  # jellyfin:
  #   profiles: ["vpn", "no-vpn"]
  #   image: linuxserver/jellyfin:10.9.11
  #   container_name: jellyfin
  #   networks:
  #     - mynetwork
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=${TIME_ZONE}
  #   volumes:
  #     - jellyfin-config:/config
  #     # - torrent-downloads:/downloads/torrents
  #     - usenet-downloads:/downloads
  #     - music-library:/music
  #     - movies-library:/movies
  #     - tv-series-library:/tv-series
  # # devices:
  #  #  - /dev/videoN:/dev/videoN # Mount GPU device 
  #   ports:
  #     - 8096:8096
  #     - 7359:7359/udp
  #     - 8920:8920
  #   restart: unless-stopped
  plex:
    image: lscr.io/linuxserver/plex:latest
    profiles: ["vpn", "no-vpn"]
    container_name: plex
    ports:
      - 32400:32400
    networks:
      - mynetwork           
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIME_ZONE}
      - VERSION=docker
      - PLEX_CLAIM=${PLEX_CLAIM} #optional
    volumes:
      - plex-config:/config
      - music-library:/music
      - movies-library:/movies
      - tv-series-library:/tv-series
      - usenet-downloads:/downloads
    restart: unless-stopped
  plex-meta-manager:
    image: lscr.io/linuxserver/plex-meta-manager:latest
    container_name: plex-meta-manager
    profiles: ["vpn", "no-vpn"]
    networks:
      - mynetwork          
    depends_on:
      - plex
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIME_ZONE}
    volumes:
      - plex-meta-manager-config:/config
      - usenet-downloads:/downloads
      - music-library:/music
      - movies-library:/movies
      - tv-series-library:/tv-series
    restart: unless-stopped
  lunasea:
    stdin_open: true
    tty: true
    profiles: ["vpn", "no-vpn"]  
    networks:
      - mynetwork          
    container_name: lunasea
    restart: unless-stopped
    ports:
        - 8082:80
    image: ddsderek/lunasea:latest
    volumes:
      - lunasea-config:/config
  heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIME_ZONE}
    volumes:
      - heimdall-config:/config
    ports:
      - 8083:80
      - 9443:443
    profiles: ["vpn", "no-vpn"]
    restart: unless-stopped
    depends_on:
      - lunasea
      - plex-meta-manager
      - plex
      - nzbhydra2
      - sonarr
      - sabnzbd
      - radarr
      - prowlarr
      - jellyseerr
      # - headphones
      - lazylibrarian
      - beets
    networks:
      - mynetwork
  # Doc: https://github.com/navilg/cleanmyarr
  # cleanmyarr:
  #   profiles: ["vpn", "no-vpn"]
  #   depends_on:
  #     - radarr
  #     - sonarr
  #   image: linuxshots/cleanmyarr:0.8.1
  #   container_name: cleanmyarr
  #   networks:
  #     - mynetwork
  #   volumes:
  #     - cleanmyarr-config:/config
    # restart: unless-stopped7878S:-""}
    # - CMA_ENABLE_EMAIL_NOTIFICATION=${CMA_ENABLE_EMAIL_NOTIFICATION:-""}
    # - CMA_SMTP_USERNAME=${CMA_SMTP_USERNAME:-""}
    # - CMA_SMTP_ENCODED_PASSWORD=${CMA_SMTP_ENCODED_PASSWORD:-""}
    # - CMA_SMTP_TO_EMAILS=${CMA_SMTP_TO_EMAILS:-""}
    # - CMA_ENABLE_GOTIFY_NOTIFICATION=${CMA_ENABLE_GOTIFY_NOTIFICATION:-""}
    # - CMA_GOTIFY_URL=${CMA_GOTIFY_URL:-""}
    # - CMA_GOTIFY_ENCODED_APP_TOKEN=${CMA_GOTIFY_ENCODED_APP_TOKEN:-""}
    # - CMA_ENABLE_TELEGRAM_NOTIFICATION=${CMA_ENABLE_TELEGRAM_NOTIFICATION:-""}
    # - CMA_TELEGRAM_ENCODED_BOT_TOKEN=${CMA_TELEGRAM_ENCODED_BOT_TOKEN:-""}
    # - CMA_TELEGRAM_CHAT_ID=${CMA_TELEGRAM_CHAT_ID:-""}
    # - CMA_MONITOR_RADARR=${CMA_MONITOR_RADARR:-""}
    # - CMA_RADARR_URL=${CMA_RADARR_URL:-""}
    # - CMA_RADARR_ENCODED_API_KEY=${CMA_RADARR_ENCODED_API_KEY:-""}
    # - CMA_RADARR_ENABLE_NOTIFICATION=${CMA_RADARR_ENABLE_NOTIFICATION:-""}

volumes:
  # torrent-downloads
  temp-downloads:
    driver: local
    driver_opts:
      type: none
      device: ${TMP_PATH}
      o: bind
  usenet-downloads:
    driver: local
    driver_opts:
      type: none
      device: ${DOWNLOAD_PATH}
      o: bind
  music-library:
    driver: local
    driver_opts:
      type: none
      device: ${MUSIC_PATH}
      o: bind
  movies-library:
    driver: local
    driver_opts:
      type: none
      device: ${MOVIES_PATH}
      o: bind
  tv-series-library:
    driver: local
    driver_opts:
      type: none
      device: ${TV_SERIES_PATH}
      o: bind
  radarr-config:
  sonarr-config:
  prowlarr-config:
  jellyfin-config:
  headphones-config:
  # qbittorrent-config:
  jellyseerr-config:
  heimdall-config:
  sabnzbd-config:
  lunasea-config:
  lazylibrarian-config:
  nzbhydra2-config:
  # jdownloader-config:
  maintainerr-config:
  lidarr-config:
  plex-config:
  plex-meta-manager-config:
  beets-config:
  # cleanmyarr-config:
networks:
  mynetwork:
    external: true
